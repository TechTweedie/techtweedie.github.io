<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Model Driven App - Tag - Tech Tweedie</title>
        <link>http://localhost:1313/tags/model-driven-app/</link>
        <description>Model Driven App - Tag - Tech Tweedie</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 12 Apr 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/model-driven-app/" rel="self" type="application/rss+xml" /><item>
    <title>Show and Hide Tabs Based on Status Reason in Model Driven Apps</title>
    <link>http://localhost:1313/posts/250412-show-hide-status-reason/</link>
    <pubDate>Sat, 12 Apr 2025 00:00:00 &#43;0000</pubDate><guid>http://localhost:1313/posts/250412-show-hide-status-reason/</guid>
    <description><![CDATA[Introduction Ever wanted to show or hide a tab in a Model-Driven App based on the Status Reason of a record? Maybe you’ve got a section of a form that’s only relevant when a record hits a specific state — like “Approved” or “Rejected”?
This post walks you through a reusable JavaScript snippet I’ve shared on GitHub that dynamically toggles tab visibility based on the statuscode field.
Why This Is Useful Sometimes users don’t need to see everything all the time.]]></description>
</item>
<item>
    <title>Command Bar to Call Custom Page in Model Driven App</title>
    <link>http://localhost:1313/posts/command-bar-to-call-custom-page/</link>
    <pubDate>Sun, 23 Jun 2024 19:32:41 &#43;0100</pubDate><guid>http://localhost:1313/posts/command-bar-to-call-custom-page/</guid>
    <description><![CDATA[Introduction Recently, I was asked if it was possible to place a message at the top of every form and view across an entire Model-Driven App. This message would then open a Custom Page that would display more detail. In this Blog post, I explain how this can be achieved and what steps need to be taken.
For the purposes of this demo, we will call a custom help page from a command button.]]></description>
</item>
</channel>
</rss>

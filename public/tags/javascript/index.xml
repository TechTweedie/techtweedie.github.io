<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>JavaScript - Tag - Tech Tweedie</title>
        <link>http://localhost:1313/tags/javascript/</link>
        <description>JavaScript - Tag - Tech Tweedie</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 12 Apr 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/javascript/" rel="self" type="application/rss+xml" /><item>
    <title>Show and Hide Tabs Based on Status Reason in Model Driven Apps</title>
    <link>http://localhost:1313/posts/250412-show-hide-status-reason/</link>
    <pubDate>Sat, 12 Apr 2025 00:00:00 &#43;0000</pubDate><guid>http://localhost:1313/posts/250412-show-hide-status-reason/</guid>
    <description><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Ever wanted to show or hide a tab in a <strong>Model-Driven App</strong> based on the <strong>Status Reason</strong> of a record? Maybe you’ve got a section of a form that’s only relevant when a record hits a specific state — like “Approved” or “Rejected”?</p>
<p>This post walks you through a reusable JavaScript snippet I’ve shared on GitHub that <strong>dynamically toggles tab visibility</strong> based on the <strong>statuscode</strong> field.</p>
<h2 id="why-this-is-useful">Why This Is Useful</h2>
<p>Sometimes users don’t need to see everything all the time. Maybe you’ve got a whole section for post-approval actions — or maybe you want to hide advanced options until a record is in a specific state.</p>]]></description>
</item>
<item>
    <title>Command Bar to Call Custom Page in Model Driven App</title>
    <link>http://localhost:1313/posts/command-bar-to-call-custom-page/</link>
    <pubDate>Sun, 23 Jun 2024 19:32:41 &#43;0100</pubDate><guid>http://localhost:1313/posts/command-bar-to-call-custom-page/</guid>
    <description><![CDATA[<h2 id="introduction">Introduction</h2>
<p>Recently, I was asked if it was possible to place a message at the top of every form and view across an entire Model-Driven App. This message would then open a Custom Page that would display more detail. In this Blog post, I explain how this can be achieved and what steps need to be taken.</p>
<p>For the purposes of this demo, we will call a custom help page from a command button.</p>]]></description>
</item>
</channel>
</rss>
